<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.2</version>
        <relativePath/>
    </parent>
    <groupId>com.rohan</groupId>
    <artifactId>HotelierListings</artifactId>
    <version>0.0.1</version>
    <name>HotelierListings</name>
    <description>HotelierListings</description>
    <properties>
        <java.version>17</java.version>
        <kotlin.version>1.9.0</kotlin.version>
        <openapi-generator.version>6.6.0</openapi-generator.version>
        <swagger-annotations.version>2.2.15</swagger-annotations.version>
        <postgres-version>42.6.0</postgres-version>
        <jooq-version>3.18.6</jooq-version>
        <jooq-json-version>4.0.0</jooq-json-version>
        <liquibase-version>4.23.1</liquibase-version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>snakeyaml</artifactId>
                    <groupId>org.yaml</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mustache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-docker-compose</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Swagger Annotation, needed for Code generation -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>
        <!-- Persistence -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgres-version}</version>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${jooq-version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.t9t.jooq</groupId>
            <artifactId>jooq-postgresql-json</artifactId>
            <version>${jooq-json-version}</version>
        </dependency>

        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase-version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>snakeyaml</artifactId>
                    <groupId>org.yaml</groupId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>
        <finalName>HotelierListingsApplication</finalName>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <!-- testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory -->
        <plugins>
            <!-- Jooq SQL to typed objects -->
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq-version}</version>
                <executions>
                    <execution>
                        <id>jooq-codegen</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <dependencies>
                    <dependency>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-meta-extensions-liquibase</artifactId>
                        <version>${jooq-version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <generator>
                        <generate>
                            <daos>true</daos>
                            <pojos>true</pojos>
                            <interfaces>true</interfaces>
                            <globalObjectReferences>true</globalObjectReferences>
                            <fluentSetters>true</fluentSetters>
                            <deprecationOnUnknownTypes>false</deprecationOnUnknownTypes>
                        </generate>
                        <database>
                            <name>org.jooq.meta.extensions.liquibase.LiquibaseDatabase</name>
                            <properties>

                                <property>
                                    <key>rootPath</key>
                                    <value>${project.basedir}/src/main/resources</value>
                                </property>
                                <property>
                                    <key>scripts</key>
                                    <value>/templates/database.xml</value>
                                </property>

                                <property>
                                    <key>dialect</key>
                                    <value>PostgreSQL</value>
                                </property>

                                <property>
                                    <key>includeLiquibaseTables</key>
                                    <value>false</value>
                                </property>
                            </properties>
                        </database>
                    </generator>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                </configuration>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.build.directory}/generated-sources/openapi/src/main/kotlin/com/rohan/hotelier</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- OpenApi Code Generator -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi-generator.version}</version>

                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/static/hotelier-listings-openapi-spec.yml</inputSpec>
                            <generatorName>kotlin-spring</generatorName>
                            <generateApis>true</generateApis>
                            <generateModels>true</generateModels>
                            <modelPackage>${project.groupId}.hotelier.model</modelPackage>
                            <apiPackage>${project.groupId}.hotelier.api</apiPackage>
                            <configOptions>
                                <interfaceOnly>true</interfaceOnly>
                                <useSpringBoot3>true</useSpringBoot3>
                                <enumPropertyNaming>UPPERCASE</enumPropertyNaming>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
